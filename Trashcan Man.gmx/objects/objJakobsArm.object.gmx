<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJakobsArm</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Depth
depth = -2

//Tip of gun location from origin
orgTipOfGunx = 30;
tipOfGunx = orgTipOfGunx;
orgTipOfGuny = -3;
tipOfGuny = orgTipOfGuny;
distFromShoulderToGun = 32 * image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Point arm toward mouse
image_angle = point_direction(x, y, mouse_x, mouse_y);

//Keep Jakobs arm at shoulder
x = objJakobs.x + (objJakobs.image_xscale * 2);
y = objJakobs.y + (objJakobs.image_yscale - 12);

//Match Jakobs orientation and size
if (objJakobs.image_xscale &gt; 0) {
    image_xscale = objJakobs.image_xscale;
    image_yscale = objJakobs.image_yscale;
}
if (objJakobs.image_xscale &lt; 0) {
    image_xscale = -objJakobs.image_xscale;
    image_yscale = -objJakobs.image_yscale;
}

origin (arm joint) = (a,b)
Θ = angle between x-axis and arm
tipOfGunx = a + (distFromShoulderToGun cos Θ)
tipOfGuny = b + (distFromShoulderToGun sin Θ)

//Regular
if (mouse_check_button(mb_left) &amp;&amp; objJakobs.cooldown &lt;= 0) {
    instance_create(x + (tipOfGunx * image_xscale), y + (tipOfGuny * image_yscale), objBullet);
    objJakobs.cooldown = objJakobs.regDelay;
}

//Melee
if (mouse_check_button(mb_right) &amp;&amp; objJakobs.cooldown &lt;= 0) {
    instance_create(objJakobs.x + (16 * image_xscale), objJakobs.y, objStrike);
    objJakobs.cooldown = objJakobs.strikeDelay;
}

//Heavy
if (mouse_check_button(mb_middle) &amp;&amp; objJakobs.cooldown &lt;= 0) {
    instance_create(x + (tipOfGunx * image_xscale), y + (tipOfGuny * image_yscale), objRocket);
    objJakobs.cooldown = objJakobs.heavyDelay;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
