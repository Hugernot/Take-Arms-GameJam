<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJakobsIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create weapon cooldown to start at 0
cooldown = 0;

//Animation speed
image_speed = 0.04;

//Health
hp = 100;

//Speed
orgSpd = 8;
spd = orgSpd;

//Points creation and set to 0
points = 0;

//Regular weapon stats
regDelay = 10;
regDamage = 1;

//Melee weapon stats
strikeDelay = 20;
strikeDamage = 1;

//Heavy weapon stats
heavyDelay = 40;
heavyDamage = 1;

//Create parts and start at 0
part1 = 0;
part2 = 0;
part3 = 0;

//Upgrade requirements
regUpgradeReq = 100;
strikeUpgradeReq = 100;
heavyUpgradeReq = 100;

//Dodge stats
dodging = false;
dodgeCooldown = 0;
dodgeCooldownTime = 120;
orgDodgeTime = 30;
dodgeTime = orgDodgeTime;
dodgeSpdMult = 2;
dodgeDamageReduction = 0.2;

//Damage taken from enemies
enemyRegDamage = 1;
enemyMeleeDamage = 2;
enemyHeavyDamage = 1;

//Damage reduction (1 is full damage, 0.5 is half damage, 2 is double damage)
damageReduction = 1.0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Arrow keys movement
if (keyboard_check(ord("A"))) {
    x -= spd;
    if (image_xscale &gt; 0) {
        image_xscale = -image_xscale;
    }
}
if (keyboard_check(ord("D"))) {
    x += spd;
    if (image_xscale &lt; 0) {
        image_xscale = -image_xscale;
    }
}
if (keyboard_check(ord("W")))y -= spd;
if (keyboard_check(ord("S")))y += spd;

//Boundaries
if (x - sprite_width/2 * image_xscale &lt;= 0) {
    x = sprite_width/2 * image_xscale;
}
if (y - sprite_height/2 * image_xscale &lt;= 0) {
    y = sprite_height/2 * image_xscale;
}
if (x + sprite_width/2 * image_xscale &gt;= room_width) {
    x = room_width - sprite_width/2 * image_xscale;
}
if (y + sprite_height/2 * image_xscale &gt;= room_height) {
    y = room_height - sprite_height/2 * image_xscale;
}

//GROW DAMNIT
if (keyboard_check(vk_up)) {
    image_yscale *= 1.1;
    if (image_xscale &gt; 0) {
        image_xscale *= 1.1;
    }
    if (image_xscale &lt; 0) {
        image_xscale *= 1.1;
    }
}
if (keyboard_check(vk_down)){
    image_yscale /= 1.1;
    if (image_xscale &gt; 0) {
        image_xscale /= 1.1;
    }
    if (image_xscale &lt; 0) {
        image_xscale /= 1.1;
    }
}

//Attack cooldown
cooldown -= 1;

//Regular
if (mouse_check_button(mb_left) &amp;&amp; cooldown &lt;= 0) {
    instance_create(x + (32 * image_xscale), y - (12 * image_yscale), objBullet);
    cooldown = regDelay;
}

//Melee
if (mouse_check_button(mb_right) &amp;&amp; cooldown &lt;= 0) {
    instance_create(x + (16 * image_xscale), y, objStrike);
    //audio_play_sound(sndGunshot, 10, false);
    cooldown = strikeDelay;
}

//Heavy
if (mouse_check_button(mb_middle) &amp;&amp; cooldown &lt;= 0) {
    instance_create(x + (32 * image_xscale), y - (12 * image_yscale), objRocket);
    //audio_play_sound(sndGunshot, 10, false);
    cooldown = heavyDelay;
}

//Destroy self and restart game if hp runs out, play death sound
if (hp &lt;= 0) {
    game_restart();
}

//Dodge using spacebar
//Decreases time before you can use dodge
dodgeCooldown -= 1;
//If spacebar is pressed down and the cooldown is over
if (keyboard_check(ord(" ")) &amp;&amp; dodgeCooldown &lt;= 0) {
    //You are now dodging, the cooldown is reset, and the whoosh sound is played
    dodging = true;
    dodgeCooldown = dodgeCooldownTime;
    audio_play_sound(sndWhoosh, 9, false);
}
//While dodging
if (dodging) {
    //Your speed is what ever the multiplier is times the original speed, countdown the time until dodge is over
    spd = orgSpd * dodgeSpdMult;
    dodgeTime -= 1;
    damageReduction = dodgeDamageReduction;
    //When dodge is over
    if (dodgeTime &lt;= 0) {
        //You are no longer dodging
        dodging = false;
        //Speed is reset
        spd = orgSpd;
        //Time to dodge reset
        dodgeTime = orgDodgeTime;
        damageReduction = 1.0;
    }
}

//Crafting
if (distance_to_object(objWorkshop) &lt;= objWorkshop.craftDistance) {
    if (keyboard_check(ord("1")) &amp;&amp; regUpgradeReq &lt;= part1) upgrade("reg");
    if (keyboard_check(ord("2")) &amp;&amp; strikeUpgradeReq &lt;= part2) upgrade("strike");
    if (keyboard_check(ord("3")) &amp;&amp; heavyUpgradeReq &lt;= part3) upgrade("heavy");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLootBox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other) instance_destroy();
audio_play_sound(sndPickup, 5, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyHeavy1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= enemyHeavyDamage * damageReduction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyMelee1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= enemyMeleeDamage * damageReduction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyReg1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= enemyRegDamage * damageReduction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
