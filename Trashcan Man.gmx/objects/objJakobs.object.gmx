<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJakobsIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create weapon cooldown to start at 0
cooldown = 0;

//Animation speed
image_speed = 0.04;

//Mouse angle
mouseAngle = point_direction(x, y, mouse_x, mouse_y);

//Health
hp = 100;

//Speed
orgSpd = 8;
spd = orgSpd;

//Points creation and set to 0
points = 0;

//Regular weapon stats
regDelay = 10;
regDamage = 1;

//Melee weapon stats
strikeDelay = 20;
strikeDamage = 1;

//Heavy weapon stats
heavyDelay = 40;
heavyDamage = 1;

//Create parts and start at 0
part1 = 90;
part2 = 90;
part3 = 90;

//Upgrade requirements
regUpgradeReq = 100;
strikeUpgradeReq = 100;
heavyUpgradeReq = 100;

//Dodge stats
dodging = false;
dodgeCooldown = 0;
dodgeCooldownTime = 120;
orgDodgeTime = 30;
dodgeTime = orgDodgeTime;
dodgeSpdMult = 2;
dodgeDamageReduction = 0.2;

//Damage taken from enemies
enemyRegDamage = 1;
enemyMeleeDamage = 2;
enemyHeavyDamage = 1;

//Damage reduction (1 is full damage, 0.5 is half damage, 2 is double damage)
damageReduction = 1.0;

//Damage taken from heavy attack
damageFromRocket = 10;
damageFromBullet = 5;

//Create Jakobs arm at sholder
instance_create(x + (image_xscale * 2), y + (image_yscale - 12), objJakobsArm);

//Jakobs depth
depth = -3;

//Speed penalty for not walking in the direction you are facing
spdPenalty = 0.75;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Direction you are facing based on cursor
mouseAngle = point_direction(x, y, mouse_x, mouse_y); 
if (mouseAngle &lt; 270 &amp;&amp; mouseAngle &gt; 90 &amp;&amp; image_xscale &gt; 0) {
    image_xscale = -image_xscale;
} else if ((mouseAngle &gt;= 270 || mouseAngle &lt;= 90) &amp;&amp; image_xscale &lt; 0) {
    image_xscale = -image_xscale;
}

//Arrow keys movement
if (keyboard_check(ord("A"))) {
    sprite_index = sprJakobsRunning;
    if (image_xscale &lt; 0) {
        x -= spd;
    } else {
        x -= spd * spdPenalty;
    }
}
if (keyboard_check(ord("D"))) {
    sprite_index = sprJakobsRunning;
    if (image_xscale &gt; 0) {
        x += spd;
    } else {
        x += spd * spdPenalty;
    }
}
if (keyboard_check(ord("W"))) {
    y -= spd;
    sprite_index = sprJakobsRunning;
}
if (keyboard_check(ord("S"))) {
    y += spd;
    sprite_index = sprJakobsRunning;
}

if (keyboard_check(ord("S")) || keyboard_check(ord("W")) || keyboard_check(ord("D")) || keyboard_check(ord("A"))) {
    moving = true;
} else moving = false;

if (!moving) sprite_index = sprJakobsIdle;

/*Boundaries, checks if Jakobs is out of the room using the rooms dimensions
and his collision mask*/
if (0 &gt; bbox_left) {
    x = xprevious;
}
if (0 &gt; bbox_top) {
    y = yprevious;
}
if (room_width &lt; bbox_right) {
    x = xprevious;
}
if (room_height &lt; bbox_bottom) {
    y = yprevious;
}

//Destroy self and restart game if hp runs out, play death sound
if (hp &lt;= 0) {
    game_restart();
}

//Dodge using spacebar
dodgeCooldown -= 1;
if (keyboard_check_pressed(ord(" ")) &amp;&amp; dodgeCooldown &lt;= 0) {
    dodging = true;
    dodgeCooldown = dodgeCooldownTime;
    audio_play_sound(sndWhoosh, 9, false);
}
if (dodging) {
    spd = orgSpd * dodgeSpdMult;
    dodgeTime -= 1;
    damageReduction = dodgeDamageReduction;
    if (dodgeTime &lt;= 0) {
        dodging = false;
        spd = orgSpd;
        dodgeTime = orgDodgeTime;
        damageReduction = 1.0;
    }
}

//Crafting
if (distance_to_object(objWorkshop) &lt;= objWorkshop.craftDistance) {
    if (keyboard_check_pressed(ord("F")) &amp;&amp; instance_exists(objCraft) == false) {
        instance_create(objWorkshop.x, objWorkshop.y, objCraft);
    }
    if (keyboard_check(ord("1")) &amp;&amp; regUpgradeReq &lt;= part1) upgrade("reg");
    if (keyboard_check(ord("2")) &amp;&amp; strikeUpgradeReq &lt;= part2) upgrade("strike");
    if (keyboard_check(ord("3")) &amp;&amp; heavyUpgradeReq &lt;= part3) upgrade("heavy");
}

//GROW DAMNIT
if (keyboard_check(vk_up)) {
    image_yscale *= 1.1;
    if (image_xscale &gt; 0) {
        image_xscale *= 1.1;
    }
    if (image_xscale &lt; 0) {
        image_xscale *= 1.1;
    }
}
if (keyboard_check(vk_down)){
    image_yscale /= 1.1;
    if (image_xscale &gt; 0) {
        image_xscale /= 1.1;
    }
    if (image_xscale &lt; 0) {
        image_xscale /= 1.1;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objLootBox">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part1 += other.part1;
part2 += other.part2;
part3 += other.part3;
with(other) instance_destroy();
audio_play_sound(sndPickup, 5, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyHeavy1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= enemyHeavyDamage * damageReduction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyMelee1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= enemyMeleeDamage * damageReduction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyReg1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= enemyRegDamage * damageReduction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyRocket">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= damageFromRocket;
with(other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEnemyBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= damageFromBullet;
with(other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
